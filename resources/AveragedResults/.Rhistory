setwd("D:\\Personal\\Documents\\Uni\\Master thesis\\Datasets\\Finance\\Time Series\\")
timeSeries = read.table("QCOM.csv",header =T,sep = ",")
xAxis = 1:nrow(timeSeries)
plot(value~xAxis, data = timeSeries, type = "l", lwd=3)
setwd("D:\\Personal\\Documents\\Uni\\Master thesis\\Datasets\\Finance\\Time Series\\")
timeSeries = read.table("QCOM.csv",header =T,sep = ",")
xAxis = 1:nrow(timeSeries)
plot(value~xAxis, data = timeSeries, type = "l", lwd=1,ylim = c(0,70))
library(zoo)
library(timeDate)
library(forecast)
library(lattice)
barchart(Species~Reason,data=Reasonstats,groups=Catergory,
scales=list(x=list(rot=90,cex=0.8)))
drawReturnGraphs = function(table,methodName){
yVals = table$avgReturn * 100
barplot(yVals, width = 1,col = ifelse(yVals < 0,'red','green'), xlab = "time [days]",ylab = "avg. Return [%]",main = methodName)
maVals = ma(na.omit(yVals),5)
plot(x= 1:length(maVals),y = maVals,type = "l", ylim=c(-3,3),xlab = "time [days]",ylab="moving avg of Return [%]",main = methodName)
}
drawGraphs = function(vals,name,methodName){
yVals = vals * 100
barplot(yVals, width = 1, xlab = "time [days]",ylab = paste(name,"[%]"), ylim = c(0,100),main = paste(methodName,"-",name))
maVals = ma(na.omit(yVals),5)
plot(x= 1:length(maVals),y = maVals,type = "l", ylim=c(0,100),xlab = "time [days]",ylab=paste("moving avg of",name,"[%]"),main = paste(methodName,"-",name))
}
drawAllWGraphs = function(fileName,methodName){
table = read.table(fileName,header=T,sep=",")
drawReturnGraphs(table,methodName)
drawGraphs(table$avgPrecision_UP,"avg. Precision for UP",methodName)
drawGraphs(table$avgPrecision_DOWN,"avg. Precision for DOWN",methodName)
drawGraphs(table$avgPrecisionIgnoreEqual_UP,"avg. Precision for Up (ignore equal)",methodName)
drawGraphs(table$avgPrecisionIgnoreEqual_DOWN,"avg. Precision for DOWN (ignore equal)",methodName)
}
#setwd("C:\\Users\\Leon Bornemann\\git\\EpisodePatternMining\\resources\\results\\AAPL\\")
#table = read.table("resultsAsCSV_FBSWC.csv",header = T, sep = ",")
#yVals = table$returnOfInvestment
#plot(x = 1:nrow(a), y = yVals, type = "h",col = ifelse(yVals < 0,'red','green'))
#barplot(yVals, width = 1,col = ifelse(yVals < 0,'red','green'))
setwd("C:\\Users\\Leon Bornemann\\git\\EpisodePatternMining\\resources\\AveragedResults\\")
fsbw = read.table("FBSWC.csv",header=T,sep=",")
perms = read.table("PERMS.csv",header=T,sep=",")
fsbw$method = "fsbw"
perms$method = "perms"
totalTable = rbind(fsbw,perms)
library(lattice)
barchart(avgReturn*100~date,data=totalTable,groups=method,col=c("orange","yellow"),origin = 0,xlab = "time [days]",ylab = "avg. Return [%]",scales=list(x=list(rot=90)))
yVals = totalTable$avgReturn * 100
maVals = ma(yVals,5)
#drawAllWGraphs("FBSWC.csv","FBSWC")
#drawAllWGraphs("PERMS.csv","PERMS")
library(lattice)
setwd("C:\\Users\\Leon Bornemann\\git\\EpisodePatternMining\\resources\\AveragedResults\\")
#by company
fbswc = read.table("FBSWC_byCompany.csv",header=T,sep=",")
perms = read.table("PERMS_byCompany.csv",header=T,sep=",")
fbswc$method = "fbswc"
perms$method = "perms"
totalTable = rbind(fbswc,perms)
colors = c("purple","blue")
barchart(return*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "companies",
ylab = "total Return [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Return by Company"
)
barchart(Precision_UP*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "companies",
ylab = "Precision {UP} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision {UP} by Company"
)
barchart(Precision_DOWN*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "companies",
ylab = "Precision {DOWN} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision {DOWN} by Company"
)
barchart(PrecisionIgnoreEqual_UP*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "companies",
ylab = "Precision Ignore Equal {UP} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision Ignore Equal {UP} by Company"
)
barchart(PrecisionIgnoreEqual_DOWN*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "companies",
ylab = "Precision Ignore Equal {DOWN} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision Ignore Equal {DOWN} by Company"
)
#by day
fbswc = read.table("FBSWC.csv",header=T,sep=",")
perms = read.table("PERMS.csv",header=T,sep=",")
fbswc$method = "fbswc"
perms$method = "perms"
totalTable = rbind(fbswc,perms)
barchart(avgReturn*100~date,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "time [days]",
ylab = "average Return [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Average Return per Day"
)
#prepare the moving averages:
windowSize = 5
permsmA = as.numeric(ma(totalTable[totalTable$method == "perms",]$avgReturn,windowSize))*100
permsDate = totalTable$date[totalTable$method == "perms"]
fbswcmA = as.numeric(ma(totalTable[totalTable$method == "fbswc",]$avgReturn,windowSize))*100
fbswcmDate = totalTable$date[totalTable$method == "fbswc"]
fbswcMatrix = data.frame("ma" = fbswcmA,"date" = fbswcmDate, "method" = "fbswc")
permsMatrix = data.frame("ma" = permsmA,"date" = permsDate, "method" = "perms")
maDf = rbind(permsMatrix,fbswcMatrix)
xyplot(ma~date,
data = maDf,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
lwd = 3,
origin = 0,
xlab = "time [days]",
ylab = "moving avg of Return [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Average Daily Return decay over time",
type = "l"
)
library(lattice)
setwd("C:\\Users\\Leon Bornemann\\git\\EpisodePatternMining\\resources\\AveragedResults\\")
#by company
fbswc = read.table("FBSWC_byCompany.csv",header=T,sep=",")
perms = read.table("PERMS_byCompany.csv",header=T,sep=",")
fbswc$method = "fbswc"
perms$method = "perms"
totalTable = rbind(fbswc,perms)
colors = c("purple","blue")
barchart(return*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "companies",
ylab = "total Return [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Return by Company"
)
barchart(Precision_UP*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 50,
xlab = "companies",
ylab = "Precision {UP} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision {UP} by Company"
)
barchart(Precision_DOWN*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 50,
xlab = "companies",
ylab = "Precision {DOWN} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision {DOWN} by Company"
)
barchart(PrecisionIgnoreEqual_UP*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 50,
xlab = "companies",
ylab = "Precision Ignore Equal {UP} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision Ignore Equal {UP} by Company"
)
barchart(PrecisionIgnoreEqual_DOWN*100~company,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 50,
xlab = "companies",
ylab = "Precision Ignore Equal {DOWN} [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Precision Ignore Equal {DOWN} by Company"
)
#by day
fbswc = read.table("FBSWC.csv",header=T,sep=",")
perms = read.table("PERMS.csv",header=T,sep=",")
fbswc$method = "fbswc"
perms$method = "perms"
totalTable = rbind(fbswc,perms)
barchart(avgReturn*100~date,
data=totalTable,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
origin = 0,
xlab = "time [days]",
ylab = "average Return [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Average Return per Day"
)
#prepare the moving averages:
windowSize = 5
permsmA = as.numeric(ma(totalTable[totalTable$method == "perms",]$avgReturn,windowSize))*100
permsDate = totalTable$date[totalTable$method == "perms"]
fbswcmA = as.numeric(ma(totalTable[totalTable$method == "fbswc",]$avgReturn,windowSize))*100
fbswcmDate = totalTable$date[totalTable$method == "fbswc"]
fbswcMatrix = data.frame("ma" = fbswcmA,"date" = fbswcmDate, "method" = "fbswc")
permsMatrix = data.frame("ma" = permsmA,"date" = permsDate, "method" = "perms")
maDf = rbind(permsMatrix,fbswcMatrix)
xyplot(ma~date,
data = maDf,
groups=method,
par.settings=list(superpose.polygon=list(col=colors)),
lwd = 3,
origin = 0,
xlab = "time [days]",
ylab = "moving avg of Return [%]",
auto.key=list(space="top", columns=2, cex.title=1),
scales=list(x=list(rot=90)),
main="Average Daily Return decay over time",
type = "l"
)
